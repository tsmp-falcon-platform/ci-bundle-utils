credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          description: |-
            jenkins-centos7-static-agent
          id: jenkins-centos7-static-agent
          privateKeySource:
            directEntry:
              privateKey: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: jenkins
      - basicSSHUserPrivateKey:
          description: |-
            windows2012
          id: windows2012
          privateKeySource:
            directEntry:
              privateKey: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: misterman
      - basicSSHUserPrivateKey:
          description: |-
            github-sshkey-misterman1
          id: github-sshkey-misterman1
          privateKeySource:
            directEntry:
              privateKey: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: misterman1
      - usernamePassword:
          description: |-
            misterman1-githubaccount-accesstoken-api
          id: misterman1-githubaccount-accesstoken-api
          password: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: misterman1
      - string:
          description: |-
            Webhook secret for https://github.com/apps/cloudbees-ci-misterman1-casc
          id: 00428b3c-7e38-4fcd-a520-ddaaa2bd4c17
          scope: SYSTEM
          secret: '{AQAAABAAAAblablabla}'
      - string:
          description: |-
            Webhook secret for https://github.com/apps/cloudbees-ci-misterman1-practice
          id: 11dc6f8e-d68a-4fde-93de-d264a0c019a9
          scope: SYSTEM
          secret: '{AQAAABAAAAblablabla}'
      - string:
          description: |-
            gh_pat_secrettest
          id: gh_pat_secrettest
          scope: GLOBAL
          secret: '{AQAAABAAAAblablabla}'
      - string:
          description: |-
            mistermanbb
          id: mistermanbb
          scope: GLOBAL
          secret: '{AQAAABAAAAblablabla}'
      - usernamePassword:
          description: |-
            bbactoken
          id: bbactoken
          password: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: misterman@cloudbees.com
      - string:
          description: |-
            jmrepokey
          id: jmrepokey
          scope: GLOBAL
          secret: '{AQAAABAAAAblablabla}'
      - usernamePassword:
          description: |-
            cloudbees-api-token
          id: cloudbees-api-token
          password: '{AQAAABAAAAblablabla}'
          scope: GLOBAL
          username: misterman
      - string:
          description: |-
            zach_ken_admin
          id: zach_ken_admin
          scope: GLOBAL
          secret: '{AQAAABAAAAblablabla}'
      - file:
          description: |-
            values-dev-deleteme
          fileName: values-dev.yaml
          id: values-dev-deleteme
          scope: GLOBAL
          secretBytes: '{AQAAABAAAAblablabla}'
jenkins:
  agentProtocols:
  - Diagnostic-Ping
  - JNLP4-connect
  - JNLP4-connect-proxy
  - OperationsCenter2
  - Ping
  authorizationStrategy: cloudBeesRoleBasedAccessControl
  clouds:
  - amazonEC2:
      credentialsId: fa507990-45a4-4cf1-b777-022a5e2c3ded
      name: ec2-ec2-cloud-shared-config-windows
      region: us-east-1
      sshKeysCredentialsId: aws_misterman_keypair
      templates:
      - ami: ami-0664409df8b3b7eca
        amiType:
          windowsData:
            allowSelfSignedCertificate: true
            password: '{AQAAABAAAAblablabla}'
            specifyPassword: true
            useHTTPS: true
        associatePublicIp: true
        connectBySSHProcess: false
        connectionStrategy: PUBLIC_IP
        deleteRootOnTermination: false
        description: |-
          windows-agent-steve
        ebsEncryptRootVolume: DEFAULT
        ebsOptimized: false
        hostKeyVerificationStrategy: OFF
        idleTerminationMinutes: '30'
        javaPath: java
        labelString: windows
        maxTotalUses: -1
        metadataEndpointEnabled: true
        metadataHopsLimit: 1
        metadataSupported: true
        metadataTokensRequired: false
        minimumNumberOfInstances: 0
        minimumNumberOfSpareInstances: 0
        mode: EXCLUSIVE
        monitoring: false
        numExecutors: 1
        remoteFS: C:\jenkins
        securityGroups: sg-01acf813eca3de38e
        stopOnTerminate: false
        subnetId: subnet-0323a8ae8485b9be2
        t2Unlimited: false
        tenancy: Default
        type: T2Micro
        useEphemeralDevices: false
      useInstanceProfileForCredentials: false
unclassified:
  insightConfiguration:
    accessKey: '{AQAAABAAAAblablabla}'
    fetchHistoricalData: true
