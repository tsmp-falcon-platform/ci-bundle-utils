# Patches based upon https://jsonpatch.com/
patches:
  jenkins.yaml:
    # you may want to keep this if you have a license file
  - op: remove
    path: /license
    # these labels are dynamic based on the agents available
  - op: remove
    path: /jenkins/labelAtoms
    # remove the operationsCenterRootAction because it is provided by the OC
  - op: remove
    path: /unclassified/operationsCenterRootAction

# Replace credentials with references to variables
# Autosetting:
# - github-token-ro/password -> GITHUB_TOKEN_RO_PASSWORD
# - github-token-rw/password -> GITHUB_TOKEN_RW_PASSWORD
# Explicit:
# - id: github-token-ro
#   password: ${MY_READ_TOKEN}
# - id: github-org-hooks-shared-secret
#   secret: ${MY_SHARED_ORGS_HOOKS_SECRET}
credentials:
  # jenkins.yaml:
  # - id: github-token-ro
  #   password: "${MY_READ_TOKEN}"
  # - id: github-token-rw
  #   password: "${MY_WRITE_TOKEN}"
  # items.yaml:
  # - id: test-folder-cred
  #   password: "${MY_FOLDER_TOKEN}"
  jenkins.yaml: {}
  items.yaml: {}

splits:
  # Split by name on regex (auto takes each item separately)
  items:
    items.yaml:
    - target: auto
      patterns: ['.*']
  # Split by path whereby target can take 'auto', 'delete', or the specific file name:
  #   'auto' takes each item separately, replacing '/' with '.'
  #   'delete' deletes the file completely
  # jcasc:
  #   jenkins.yaml:
  #   - target: auto
  #     paths:
  #     - credentials
  #   - target: kubernetes.yaml
  #     paths:
  #     - masterprovisioning
  #     - kube
  jcasc:
    # Split by path (auto takes each item separately, replacing '/' with '.')
    jenkins.yaml:

    # put all the credentials stuff in one file
    - target: credentials.yaml
      paths:
      - globalCredentialsConfiguration
      - credentials

    # put all the views stuff in one file
    - target: views.yaml
      paths:
      - jenkins/primaryView
      - jenkins/views

    # put all the security stuff in one file
    - target: security.yaml
      paths:
      - jenkins/authorizationStrategy
      - jenkins/securityRealm
      - security

    # put all the casc stuff in one file
    - target: casc.yaml
      paths:
      - cloudBeesCasCServer
      - unclassified/bundleStorageService
      - unclassified/bundleUpdateTiming
      - unclassified/cascAutoControllerProvisioning
      - unclassified/cascItemsConfiguration

    # put each of the following in to their own file
    - target: auto
      paths:
      - jenkins/clouds
      - masterprovisioning
      - support

  # Replace all instances of 'pattern' with 'value' in the yaml files
substitutions: {}
  # jenkins.yaml:
  # - pattern: cloudbees/cloudbees-core-agent:[0-9\.]+
  #   value: cloudbees/cloudbees-core-agent:${readFile:/var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion}
