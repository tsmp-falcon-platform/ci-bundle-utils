removeStrategy:
  rbac: SYNC
  items: NONE
items:
- kind: freeStyle
  name: casc-custom-sync-deploy-cm
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  builders:
  - shell:
      command: |
        set -e
        for MY_BUNDLE in $(make find BP="${BUNDLE_REGEX}"); do
          export MY_BUNDLE
          make auto/deploy-cm
        done
  concurrentBuild: false
  description: "This job deploys config maps containing CasC bundles. It runs on the
    main branch as a form of GitOps.\r\n\r\nBy default it will create config maps
    for all bundles matching the default BUNDLE_REGEX parameter.\r\n\r\nThis is meant
    as a utility for those using config maps for CasC bundles. You may not need this
    if you are using:\r\n- the \"CasC Retriever\" sidecar for their OC bundle\r\n
    - and/or the \"Configuration as Code bundle location\" for the controller bundles"
  disabled: false
  displayName: ''
  label: bundleutils
  parameters:
  - string:
      trim: false
      defaultValue: (.*)
      name: BUNDLE_REGEX
  publishersList:
  - gitHubCommitStatusSetter:
      commitShaSource:
        buildDataRevisionShaSource: {}
      statusResultSource:
        defaultStatusResultSource: {}
      contextSource:
        defaultCommitContextSource: {}
      reposSource:
        anyDefinedRepositorySource: {}
      statusBackrefSource:
        buildRefBackrefSource: {}
  scm:
    scmGit:
      userRemoteConfigs:
      - userRemoteConfig:
          credentialsId: github-token-rw
          refspec: +refs/heads/main:refs/remotes/origin/main
          url: https://github.com/acme-org/acme-bundles-drift
      branches:
      - branchSpec:
          name: '*/main'
  scmCheckoutStrategy:
    standard: {}
  triggers:
  - githubPush: {}
- kind: freeStyle
  name: casc-custom-sync-direct
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  buildDiscarder:
    logRotator:
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
      daysToKeep: 30
      numToKeep: 30
  buildWrappers:
  - secretBuildWrapper:
      bindings:
      - gitUsernamePassword:
          gitToolName: Default
          credentialsId: github-token-rw
      - string:
          variable: CASC_VALIDATION_LICENSE_KEY
          credentialsId: casc-validation-key
      - string:
          variable: CASC_VALIDATION_LICENSE_CERT
          credentialsId: casc-validation-cert
      - usernamePassword:
          usernameVariable: BUNDLEUTILS_USERNAME
          passwordVariable: BUNDLEUTILS_PASSWORD
          credentialsId: bundleutils-creds
  builders:
  - shell:
      command: "set -e\necho \"BUNDLE_REGEX='$BUNDLE_REGEX'\"\necho \"DRY_RUN='$DRY_RUN'\"\
        \n\nfor MY_BUNDLE in $(make find BP=\"$BUNDLE_REGEX\"); do\n  export MY_BUNDLE\n\
        \  echo \"Running main target...\"\n  make auto/all\n  \n  echo \"Running
        a git diff to check...\"\n  make auto/git-diff || make auto/git-commit\n \
        \ make git-diff # everything should have been committed, failing if diff found\n\
        \  \n  if [ \"$DRY_RUN\" = \"true\" ]; then\n    echo \"DRY_RUN=true so resetting
        hard so as not to push anything...\"\n    make git-reset\n  else\n    echo
        \"Pushing changes...\"\n    make git-push\n  fi\ndone\n\n#export -p > $WORKSPACE_TMP/ENV\n
        #sleep 600"
  concurrentBuild: false
  description: "This job allows you to run a CasC sync direct for all bundles matching
    the BUNDLE_REGEX.\r\n\r\nEvery matched bundle will save it's configuration directly
    to the main branch (similar to the 'casc-local-sync-direct' job).\r\n\r\nHibernated
    controllers are not currently supported and will fail the build.\r\n "
  disabled: false
  displayName: ''
  label: bundleutils
  parameters:
  - booleanParam:
      defaultValue: true
      name: DRY_RUN
      description: Uncheck to push changes to main
  - string:
      trim: false
      defaultValue: (controller-a)
      name: BUNDLE_REGEX
      description: Regex to match bundle names. e.g. (oc-bundle|controller-a) or (controller-.*)
  scm:
    scmGit:
      extensions:
      - localBranch: {}
      - cloneOption:
          reference: ''
          noTags: true
          honorRefspec: false
          shallow: false
      - userIdentity:
          name: bundleutils-bot
          email: bundleutils-bot@example.org
      userRemoteConfigs:
      - userRemoteConfig:
          credentialsId: github-token-rw
          url: https://github.com/acme-org/acme-bundles-drift
      branches:
      - branchSpec:
          name: refs/heads/main
  scmCheckoutStrategy:
    standard: {}
- kind: freeStyle
  name: casc-custom-sync-drift
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  buildDiscarder:
    logRotator:
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
      daysToKeep: 30
      numToKeep: 30
  buildWrappers:
  - secretBuildWrapper:
      bindings:
      - gitUsernamePassword:
          gitToolName: Default
          credentialsId: github-token-rw
      - string:
          variable: CASC_VALIDATION_LICENSE_KEY
          credentialsId: casc-validation-key
      - string:
          variable: CASC_VALIDATION_LICENSE_CERT
          credentialsId: casc-validation-cert
      - usernamePassword:
          usernameVariable: BUNDLEUTILS_USERNAME
          passwordVariable: BUNDLEUTILS_PASSWORD
          credentialsId: bundleutils-creds
  builders:
  - shell:
      command: "set -e\necho \"BUNDLE_REGEX='$BUNDLE_REGEX'\"\necho \"DRY_RUN='$DRY_RUN'\"\
        \n\nfor MY_BUNDLE in $(make find BP=\"$BUNDLE_REGEX\"); do\n  export MY_BUNDLE\n\
        \n  echo \"Checking out drift branch...\"\n  make auto/git-handle-drift\n\
        \  make auto/git-checkout-drift\n\n  echo \"Running main target...\"\n  make
        auto/all\n  \n  echo \"Running a git diff to check...\"\n  make auto/git-diff
        || make auto/git-commit\n  make git-diff # everything should have been committed,
        failing if diff found\n  \n  if [ \"$DRY_RUN\" = \"true\" ]; then\n    echo
        \"DRY_RUN=true so resetting hard so as not to push anything...\"\n    make
        git-reset\n  else\n    echo \"Pushing changes...\"\n    make git-push\n  fi\n\
        \  make git-reset-main\ndone\n"
  concurrentBuild: false
  description: "This job allows you to run a CasC sync to a drift branch for all bundles
    matching the BUNDLE_REGEX.\r\n\r\nEvery matched bundle will save it's configuration
    directly to the main branch (similar to the 'casc-local-sync-drift' job).\r\n\r
    \nHibernated controllers are not currently supported and will fail the build."
  disabled: false
  displayName: ''
  label: bundleutils
  parameters:
  - booleanParam:
      defaultValue: true
      name: DRY_RUN
      description: Uncheck to push changes to main
  - string:
      trim: false
      defaultValue: (controller-a)
      name: BUNDLE_REGEX
      description: Regex to match bundle names. e.g. (oc-bundle|controller-a) or (controller-.*)
  scm:
    scmGit:
      extensions:
      - localBranch: {}
      - cloneOption:
          reference: ''
          noTags: true
          honorRefspec: false
          shallow: false
      - userIdentity:
          name: bundleutils-bot
          email: bundleutils-bot@example.org
      - wipeWorkspace: {}
      userRemoteConfigs:
      - userRemoteConfig:
          credentialsId: github-token-rw
          url: https://github.com/acme-org/acme-bundles-drift
      branches:
      - branchSpec:
          name: refs/heads/main
  scmCheckoutStrategy:
    standard: {}
- kind: freeStyle
  name: casc-custom-validate
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  buildDiscarder:
    logRotator:
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
      daysToKeep: 30
      numToKeep: 30
  buildWrappers:
  - secretBuildWrapper:
      bindings:
      - gitUsernamePassword:
          gitToolName: Default
          credentialsId: github-token-rw
      - string:
          variable: CASC_VALIDATION_LICENSE_KEY
          credentialsId: casc-validation-key
      - string:
          variable: CASC_VALIDATION_LICENSE_CERT
          credentialsId: casc-validation-cert
      - usernamePassword:
          usernameVariable: BUNDLEUTILS_USERNAME
          passwordVariable: BUNDLEUTILS_PASSWORD
          credentialsId: bundleutils-creds
  builders:
  - shell:
      command: |-
        set -e
        echo "BUNDLE_REGEX='$BUNDLE_REGEX'"
        echo "DRY_RUN='$DRY_RUN'"

        for bundle in $(make find BP="$BUNDLE_REGEX"); do
          echo "Running main target for '$bundle'..."
          make run/"$bundle"/validate
        done
        #export -p > $WORKSPACE_TMP/ENV
        #sleep 600
  concurrentBuild: false
  description: "This job WILL NOT FETCH AND TRANSFORM bundles. It will ONLY VALIDATE
    EXISTING bundles.\r\n\r\nThis is useful for testing feature branches for changes
    not made through the UI."
  disabled: false
  displayName: ''
  label: bundleutils
  parameters:
  - string:
      trim: false
      defaultValue: (oc-bundle)
      name: BUNDLE_REGEX
      description: Regex to match bundle names. e.g. (oc-bundle|controller-a) or (controller-.*)
  - string:
      trim: true
      defaultValue: main
      name: VALIDATION_BRANCH
      description: Branch to use for the bundles validation.
  scm:
    scmGit:
      extensions:
      - localBranch: {}
      - cloneOption:
          reference: ''
          noTags: true
          honorRefspec: false
          shallow: false
      - userIdentity:
          name: bundleutils-bot
          email: bundleutils-bot@example.org
      userRemoteConfigs:
      - userRemoteConfig:
          credentialsId: github-token-rw
          url: https://github.com/acme-org/acme-bundles-drift
      branches:
      - branchSpec:
          name: refs/heads/${VALIDATION_BRANCH}
  scmCheckoutStrategy:
    standard: {}
