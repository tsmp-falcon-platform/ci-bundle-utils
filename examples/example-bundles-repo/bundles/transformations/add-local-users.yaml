# Patches based upon https://jsonpatch.com/
patches: {}

# leaving here as an example of how to add users to the local Jenkins instance

# patches:
#   jenkins.yaml:
#   - op: replace
#     path: /jenkins/securityRealm/local/users
#     value:
#     - id: admin
#       name: "Administrator"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "admin@example.com"
#     - id: admin-lite
#       name: "Administrator Lite"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "admin-lite@example.com"
#     - id: developer
#       name: "Developer User"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "dev@example.com"
#     - id: browser
#       name: "Browser User"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "browser@example.com"
#     - id: "casc-validator"
#       name: "CasC Validator"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "validator@example.com"
#     - id: "ext-reader"
#       name: "ExtendedReader User"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "ext-reader@example.com"
#     - id: "manager"
#       name: "Manager User"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "manager@example.com"
#     - id: swarm
#       name: "Swarm User"
#       password: ${COMMON_PASSWORD}
#       properties:
#         - mailer:
#             emailAddress: "swarm@example.com"

# credentials: {}
# Replace credentials with references to variables
# Autosetting:
# - github-token-ro/password -> GITHUB_TOKEN_RO_PASSWORD
# - github-token-rw/password -> GITHUB_TOKEN_RW_PASSWORD
# Explicit:
# - id: github-token-ro
#   password: ${MY_READ_TOKEN}

  # jenkins.yaml:
  # - id: github-token-ro
  #   password: "${MY_READ_TOKEN}"
  # - id: github-token-rw
  #   password: "${MY_WRITE_TOKEN}"
  # items.yaml:
  # - id: test-folder-cred
  #   password: "${MY_FOLDER_TOKEN}"
  # jenkins.yaml: {}
  # items.yaml: {}


# splits:
  # Split by name on regex (auto takes each item separately)
  # items:
  #   items.yaml:
  #   - target: auto
  #     patterns: ['casc-test-.*']
  #   - target: controllers.yaml
  #     patterns: ['controller-.*']
  #   - target: delete
  #     patterns: ['test-fs']
  # items: {}
  # Split by path whereby target can take 'auto', 'delete', or the specific file name:
  #   'auto' takes each item separately, replacing '/' with '.'
  #   'delete' deletes the file completely
  # jcasc:
  #   jenkins.yaml:
  #   - target: auto
  #     paths:
  #     - credentials
  #   - target: kubernetes.yaml
  #     paths:
  #     - masterprovisioning
  #     - kube
  # jcasc: {}

  # Replace all instances of 'pattern' with 'value' in the yaml files
#substitutions: {}
  # jenkins.yaml:
  # - pattern: cloudbees/cloudbees-core-agent:[0-9\.]+
  #   value: cloudbees/cloudbees-core-agent:${readFile:/var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion}
