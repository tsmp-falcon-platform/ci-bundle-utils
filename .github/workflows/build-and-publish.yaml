# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  workflow_dispatch:
  release:
    types: [published]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUNDLEUTILS_RELEASE_VERSION: ${{ github.event.release.tag_name || '0.0.0' }}
  BUNDLEUTILS_RELEASE_HASH: ${{ github.sha || 'dev-build-unkown' }}

jobs:
  build-and-publish-artifact:
    name: Build Executables
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13]
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Get full commit history and tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install

      - name: Run tests
        run: |
          make test

      - name: Build Executable with PyInstaller (Linux/macOS)
        run: |
          make pyinstaller
          cd bundleutilspkg
          ls -al dist
          mv dist/bundleutils dist/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          ls -al dist
          cp -r dist/bundleutils-${{ runner.os }}-py${{ matrix.python-version }} /tmp/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          /tmp/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}/bundleutils version

      - name: Add binary to release if it is a release
        if: github.event_name == 'release'
        run: |
          cd bundleutilspkg/dist
          zip -r bundleutils-${{ runner.os }}-py${{ matrix.python-version }}.zip bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          gh release upload ${{ env.BUNDLEUTILS_RELEASE_VERSION }} bundleutils-${{ runner.os }}-py${{ matrix.python-version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUNDLEUTILS_RELEASE_VERSION=${{ env.BUNDLEUTILS_RELEASE_VERSION }}
            BUNDLEUTILS_RELEASE_HASH=${{ env.BUNDLEUTILS_RELEASE_HASH }}
