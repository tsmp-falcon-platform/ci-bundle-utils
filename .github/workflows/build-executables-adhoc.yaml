# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Adhoc Add artifact to the release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag for release"
        required: true
      dry_run:
        description: "Run in dry-run mode?"
        required: false
        default: "false"
jobs:
  build-and-publish-artifact:
    name: Build Executables
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13]
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full commit history and tags
          ref: ${{ github.event.inputs.tag_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install

      - name: Run tests
        run: |
          make test

      - name: Build Executable with PyInstaller (Linux/macOS)
        run: |
          make pyinstaller
          cd bundleutilspkg
          ls -al dist
          mv dist/bundleutils dist/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          ls -al dist
          cp -r dist/bundleutils-${{ runner.os }}-py${{ matrix.python-version }} /tmp/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          /tmp/bundleutils-${{ runner.os }}-py${{ matrix.python-version }}/bundleutils version

      - name: Add binary to release
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "Dry run mode enabled. Skipping release upload."
            exit 0
          fi
          cd bundleutilspkg/dist
          zip -r bundleutils-${{ runner.os }}-py${{ matrix.python-version }}.zip bundleutils-${{ runner.os }}-py${{ matrix.python-version }}
          gh release upload ${{ github.event.inputs.tag_name }} bundleutils-${{ runner.os }}-py${{ matrix.python-version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
